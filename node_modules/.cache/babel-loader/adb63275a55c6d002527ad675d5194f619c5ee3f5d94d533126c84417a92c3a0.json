{"ast":null,"code":"var _jsxFileName = \"/Users/vanessa/popi/src/pages/AlbumDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReviewCard from './ReviewCard';\nimport ReviewForm from './ReviewForm';\nimport AlbumCard from '../components/AlbumCard';\nimport './AlbumDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumDashboard = props => {\n  _s();\n  const [artist, setArtist] = useState('');\n  const [albums, setAlbums] = useState([]);\n  useEffect(() => {\n    if (artist !== '') {\n      const fetchAlbums = async () => {\n        try {\n          const res = await axios.get(`/albums/${artist}`);\n          setAlbums(res.data); // res.data is now an array of album objects\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      fetchAlbums();\n    }\n  }, [artist]);\n\n  // Static reviews data\n  const reviews = [{\n    avatarUrl: '',\n    username: 'anon',\n    comment: 'Slaaaaaay!'\n  }, {\n    avatarUrl: '',\n    username: 'anon',\n    comment: 'SO GOOD!'\n  }, {\n    avatarUrl: '',\n    username: 'anon',\n    comment: 'obsessed'\n  }];\n  const handleArtistChange = event => {\n    setArtist(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: albums.map((album, index) => /*#__PURE__*/_jsxDEV(AlbumCard, {\n        album: album.title,\n        artistName: album.artist,\n        img: album.img\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviews-container\",\n        children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(ReviewCard, {\n          review: review\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AlbumDashboard, \"PxIk/pvMstuek+nyo3RshxBXd0k=\");\n_c = AlbumDashboard;\nexport default AlbumDashboard;\nvar _c;\n$RefreshReg$(_c, \"AlbumDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReviewCard","ReviewForm","AlbumCard","jsxDEV","_jsxDEV","AlbumDashboard","props","_s","artist","setArtist","albums","setAlbums","fetchAlbums","res","get","data","err","console","error","reviews","avatarUrl","username","comment","handleArtistChange","event","target","value","className","children","map","album","index","title","artistName","img","fileName","_jsxFileName","lineNumber","columnNumber","review","_c","$RefreshReg$"],"sources":["/Users/vanessa/popi/src/pages/AlbumDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReviewCard from './ReviewCard';\nimport ReviewForm from './ReviewForm';\nimport AlbumCard from '../components/AlbumCard';\nimport './AlbumDashboard.css';\n\nconst AlbumDashboard = (props) => {\n    const [artist, setArtist] = useState('');\n    const [albums, setAlbums] = useState([]);\n\n    useEffect(() => {\n        if (artist !== '') {\n            const fetchAlbums = async () => {\n                try {\n                    const res = await axios.get(`/albums/${artist}`);\n                    setAlbums(res.data);  // res.data is now an array of album objects\n                } catch (err) {\n                    console.error(err);\n                }\n            };\n    \n            fetchAlbums();\n        }\n    }, [artist]);    \n\n    // Static reviews data\n    const reviews = [\n        {\n            avatarUrl: '',\n            username: 'anon',\n            comment: 'Slaaaaaay!',\n        },\n        {\n            avatarUrl: '',\n            username: 'anon',\n            comment: 'SO GOOD!',\n        },\n        {\n            avatarUrl: '',\n            username: 'anon',\n            comment: 'obsessed',\n        },\n    ];\n\n    const handleArtistChange = (event) => {\n        setArtist(event.target.value);\n    };\n\n    return (\n        <div className=\"album-dashboard\">\n            <div className=\"left-side\">\n                {albums.map((album, index) => (\n                     <AlbumCard key={index} album={album.title} artistName={album.artist} img={album.img} />\n                ))}\n            </div>\n            <div className=\"right-side\">\n                <div className=\"reviews-container\">\n                    {reviews.map((review, index) => (\n                        <ReviewCard key={index} review={review} />\n                    ))}\n                </div>\n                <ReviewForm />\n            </div>\n        </div>\n    );\n};\n\nexport default AlbumDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}